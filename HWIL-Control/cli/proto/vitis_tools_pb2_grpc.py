# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import vitis_tools_pb2 as vitis__tools__pb2


class ToolsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ReadBifToJson = channel.unary_unary(
                '/xilinx.rigel.tools.v1.Tools/ReadBifToJson',
                request_serializer=vitis__tools__pb2.ReadBifRequest.SerializeToString,
                response_deserializer=vitis__tools__pb2.ReadBifResponse.FromString,
                )
        self.WriteJsonToBif = channel.unary_unary(
                '/xilinx.rigel.tools.v1.Tools/WriteJsonToBif',
                request_serializer=vitis__tools__pb2.WriteBifRequest.SerializeToString,
                response_deserializer=vitis__tools__pb2.WriteBifResponse.FromString,
                )
        self.PreviewBif = channel.unary_unary(
                '/xilinx.rigel.tools.v1.Tools/PreviewBif',
                request_serializer=vitis__tools__pb2.PreviewBifRequest.SerializeToString,
                response_deserializer=vitis__tools__pb2.PreviewBifResponse.FromString,
                )
        self.CreateBootImage = channel.unary_unary(
                '/xilinx.rigel.tools.v1.Tools/CreateBootImage',
                request_serializer=vitis__tools__pb2.CreateBootImageRequest.SerializeToString,
                response_deserializer=vitis__tools__pb2.CreateBootImageResponse.FromString,
                )
        self.GetBifDataForProject = channel.unary_unary(
                '/xilinx.rigel.tools.v1.Tools/GetBifDataForProject',
                request_serializer=vitis__tools__pb2.GetBifDataRequest.SerializeToString,
                response_deserializer=vitis__tools__pb2.GetBifDataResponse.FromString,
                )


class ToolsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ReadBifToJson(self, request, context):
        """Bootgen services
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteJsonToBif(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PreviewBif(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBootImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBifDataForProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ToolsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ReadBifToJson': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadBifToJson,
                    request_deserializer=vitis__tools__pb2.ReadBifRequest.FromString,
                    response_serializer=vitis__tools__pb2.ReadBifResponse.SerializeToString,
            ),
            'WriteJsonToBif': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteJsonToBif,
                    request_deserializer=vitis__tools__pb2.WriteBifRequest.FromString,
                    response_serializer=vitis__tools__pb2.WriteBifResponse.SerializeToString,
            ),
            'PreviewBif': grpc.unary_unary_rpc_method_handler(
                    servicer.PreviewBif,
                    request_deserializer=vitis__tools__pb2.PreviewBifRequest.FromString,
                    response_serializer=vitis__tools__pb2.PreviewBifResponse.SerializeToString,
            ),
            'CreateBootImage': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBootImage,
                    request_deserializer=vitis__tools__pb2.CreateBootImageRequest.FromString,
                    response_serializer=vitis__tools__pb2.CreateBootImageResponse.SerializeToString,
            ),
            'GetBifDataForProject': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBifDataForProject,
                    request_deserializer=vitis__tools__pb2.GetBifDataRequest.FromString,
                    response_serializer=vitis__tools__pb2.GetBifDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'xilinx.rigel.tools.v1.Tools', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Tools(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ReadBifToJson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.tools.v1.Tools/ReadBifToJson',
            vitis__tools__pb2.ReadBifRequest.SerializeToString,
            vitis__tools__pb2.ReadBifResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteJsonToBif(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.tools.v1.Tools/WriteJsonToBif',
            vitis__tools__pb2.WriteBifRequest.SerializeToString,
            vitis__tools__pb2.WriteBifResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PreviewBif(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.tools.v1.Tools/PreviewBif',
            vitis__tools__pb2.PreviewBifRequest.SerializeToString,
            vitis__tools__pb2.PreviewBifResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateBootImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.tools.v1.Tools/CreateBootImage',
            vitis__tools__pb2.CreateBootImageRequest.SerializeToString,
            vitis__tools__pb2.CreateBootImageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBifDataForProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.tools.v1.Tools/GetBifDataForProject',
            vitis__tools__pb2.GetBifDataRequest.SerializeToString,
            vitis__tools__pb2.GetBifDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
