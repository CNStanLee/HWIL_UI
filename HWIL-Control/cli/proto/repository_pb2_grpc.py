# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import repository_pb2 as repository__pb2


class RepositoryServiceStub(object):
    """For repo handling, platforms and applications.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListRepoPaths = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/ListRepoPaths',
                request_serializer=repository__pb2.ListRepoPathsRequest.SerializeToString,
                response_deserializer=repository__pb2.RepoPaths.FromString,
                )
        self.SetRepoPaths = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/SetRepoPaths',
                request_serializer=repository__pb2.RepoPaths.SerializeToString,
                response_deserializer=repository__pb2.SetRepoPathsResponse.FromString,
                )
        self.AddRepoPaths = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/AddRepoPaths',
                request_serializer=repository__pb2.RepoPaths.SerializeToString,
                response_deserializer=repository__pb2.SetRepoPathsResponse.FromString,
                )
        self.RemoveRepoPaths = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/RemoveRepoPaths',
                request_serializer=repository__pb2.RepoPaths.SerializeToString,
                response_deserializer=repository__pb2.SetRepoPathsResponse.FromString,
                )
        self.ReScanRepos = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/ReScanRepos',
                request_serializer=repository__pb2.RepoPaths.SerializeToString,
                response_deserializer=repository__pb2.SetRepoPathsResponse.FromString,
                )
        self.GetPlatform = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/GetPlatform',
                request_serializer=repository__pb2.PlatformRequest.SerializeToString,
                response_deserializer=repository__pb2.Platform.FromString,
                )
        self.ListPlatforms = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/ListPlatforms',
                request_serializer=repository__pb2.ListPlatformsRequest.SerializeToString,
                response_deserializer=repository__pb2.Platforms.FromString,
                )
        self.GetSwPlatform = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/GetSwPlatform',
                request_serializer=repository__pb2.PlatformRequest.SerializeToString,
                response_deserializer=repository__pb2.SwPlatform.FromString,
                )
        self.GetHwPlatform = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/GetHwPlatform',
                request_serializer=repository__pb2.PlatformRequest.SerializeToString,
                response_deserializer=repository__pb2.HwPlatform.FromString,
                )
        self.ValidatePlatform = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/ValidatePlatform',
                request_serializer=repository__pb2.PlatformRequest.SerializeToString,
                response_deserializer=repository__pb2.ValidatePlatformResponse.FromString,
                )
        self.ListAppRepos = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/ListAppRepos',
                request_serializer=repository__pb2.ListAppRepoRequest.SerializeToString,
                response_deserializer=repository__pb2.AppRepos.FromString,
                )
        self.ResetAppRepos = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/ResetAppRepos',
                request_serializer=repository__pb2.ResetAppReposRequest.SerializeToString,
                response_deserializer=repository__pb2.ResetAppReposResponse.FromString,
                )
        self.AddAppRepo = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/AddAppRepo',
                request_serializer=repository__pb2.AppRepo.SerializeToString,
                response_deserializer=repository__pb2.AddAppRepoResponse.FromString,
                )
        self.GetAppRepo = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/GetAppRepo',
                request_serializer=repository__pb2.GetAppRepoRequest.SerializeToString,
                response_deserializer=repository__pb2.AppRepo.FromString,
                )
        self.DeleteAppRepo = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/DeleteAppRepo',
                request_serializer=repository__pb2.AppRepo.SerializeToString,
                response_deserializer=repository__pb2.DeleteAppRepoResponse.FromString,
                )
        self.GetAppRepoState = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/GetAppRepoState',
                request_serializer=repository__pb2.GetAppRepoStateRequest.SerializeToString,
                response_deserializer=repository__pb2.AppRepoStatus.FromString,
                )
        self.UpdateAppRepo = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/UpdateAppRepo',
                request_serializer=repository__pb2.AppRepo.SerializeToString,
                response_deserializer=repository__pb2.UpdateAppRepoResponse.FromString,
                )
        self.SyncLocalRepo = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/SyncLocalRepo',
                request_serializer=repository__pb2.SyncLocalRepoRequest.SerializeToString,
                response_deserializer=repository__pb2.SyncLocalRepoResponse.FromString,
                )
        self.GetAppTemplateTree = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/GetAppTemplateTree',
                request_serializer=repository__pb2.GetAppTemplateTreeRequest.SerializeToString,
                response_deserializer=repository__pb2.AppTemplateTree.FromString,
                )
        self.ListAieExampleRepos = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/ListAieExampleRepos',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=repository__pb2.AppRepos.FromString,
                )
        self.GetAieExampleTemplateTree = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/GetAieExampleTemplateTree',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=repository__pb2.AppTemplateTree.FromString,
                )
        self.ListHlsExampleRepos = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/ListHlsExampleRepos',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=repository__pb2.AppRepos.FromString,
                )
        self.GetHlsExampleTemplateTree = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/GetHlsExampleTemplateTree',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=repository__pb2.AppTemplateTree.FromString,
                )
        self.GetEmbeddedExampleTemplateTree = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/GetEmbeddedExampleTemplateTree',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=repository__pb2.AppTemplateTree.FromString,
                )
        self.GetFilteredPlatformDomains = channel.unary_unary(
                '/xilinx.rigel.repository.v1.RepositoryService/GetFilteredPlatformDomains',
                request_serializer=repository__pb2.DomainFilterRequest.SerializeToString,
                response_deserializer=repository__pb2.Domains.FromString,
                )


class RepositoryServiceServicer(object):
    """For repo handling, platforms and applications.
    """

    def ListRepoPaths(self, request, context):
        """Returns the repository paths, both install and user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRepoPaths(self, request, context):
        """
        Clears the earlier set user repo paths.
        Set the given list of user repository paths.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddRepoPaths(self, request, context):
        """
        Adds the given RepoPaths to the existing repo paths.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveRepoPaths(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReScanRepos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlatform(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPlatforms(self, request, context):
        """
        Lists the platforms with existing repository settings.
        Each platform entry will have a set of basic information.
        This can returns platforms conforming to a given requisite.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSwPlatform(self, request, context):
        """Gets the ProcessorGroups/Domain information.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHwPlatform(self, request, context):
        """
        Gets the XSA related information, such as clocks, resources
        nature of XSA etc.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidatePlatform(self, request, context):
        """validates the platform, returns an error message or empty string in status
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAppRepos(self, request, context):
        """
        Lists both the Library and Example repositories.
        Uses .Xilinx/Vitis/ReleaseName/vitis_example_repos.json
        .Xilinx/Vitis/ReleaseName/vitis_library_repos.json
        to persist the settings. If these files are not present initializes
        with default values.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetAppRepos(self, request, context):
        """Resets to default values. All user changes to Repos will be lost.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddAppRepo(self, request, context):
        """Adds a user Repo, takes the type of repo in the request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAppRepo(self, request, context):
        """Return a repo for the given id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAppRepo(self, request, context):
        """
        Deletes the repo. This does not delete any downloaded git repo content
        on disk. But only removes the settings.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAppRepoState(self, request, context):
        """
        If repo has remote git URL, returns if the local repo is downloaded or
        in sync with remote repo,
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAppRepo(self, request, context):
        """Modify the settings of the app repo.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncLocalRepo(self, request, context):
        """Sync the local repo with the git remote repo.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAppTemplateTree(self, request, context):
        """
        Get the application templates in tree structure.
        This can filter the templates based on a selection criteria.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAieExampleRepos(self, request, context):
        """
        Lists the AIE Example repositories.
        Uses .Xilinx/Vitis/ReleaseName/vitis_aie_example_repos.json
        to persist the settings. If these files are not present initializes
        with default values.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAieExampleTemplateTree(self, request, context):
        """Get the AI Engine example templates in tree structure.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListHlsExampleRepos(self, request, context):
        """
        Lists the HLS Example repositories.
        Uses .Xilinx/Vitis/ReleaseName/vitis_hls_example_repos.json
        to persist the settings. If these files are not present initializes
        with default values.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHlsExampleTemplateTree(self, request, context):
        """Get the AI Engine example templates in tree structure.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEmbeddedExampleTemplateTree(self, request, context):
        """Get the Embedded example templates in tree structure
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFilteredPlatformDomains(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RepositoryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListRepoPaths': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRepoPaths,
                    request_deserializer=repository__pb2.ListRepoPathsRequest.FromString,
                    response_serializer=repository__pb2.RepoPaths.SerializeToString,
            ),
            'SetRepoPaths': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRepoPaths,
                    request_deserializer=repository__pb2.RepoPaths.FromString,
                    response_serializer=repository__pb2.SetRepoPathsResponse.SerializeToString,
            ),
            'AddRepoPaths': grpc.unary_unary_rpc_method_handler(
                    servicer.AddRepoPaths,
                    request_deserializer=repository__pb2.RepoPaths.FromString,
                    response_serializer=repository__pb2.SetRepoPathsResponse.SerializeToString,
            ),
            'RemoveRepoPaths': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveRepoPaths,
                    request_deserializer=repository__pb2.RepoPaths.FromString,
                    response_serializer=repository__pb2.SetRepoPathsResponse.SerializeToString,
            ),
            'ReScanRepos': grpc.unary_unary_rpc_method_handler(
                    servicer.ReScanRepos,
                    request_deserializer=repository__pb2.RepoPaths.FromString,
                    response_serializer=repository__pb2.SetRepoPathsResponse.SerializeToString,
            ),
            'GetPlatform': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlatform,
                    request_deserializer=repository__pb2.PlatformRequest.FromString,
                    response_serializer=repository__pb2.Platform.SerializeToString,
            ),
            'ListPlatforms': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPlatforms,
                    request_deserializer=repository__pb2.ListPlatformsRequest.FromString,
                    response_serializer=repository__pb2.Platforms.SerializeToString,
            ),
            'GetSwPlatform': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSwPlatform,
                    request_deserializer=repository__pb2.PlatformRequest.FromString,
                    response_serializer=repository__pb2.SwPlatform.SerializeToString,
            ),
            'GetHwPlatform': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHwPlatform,
                    request_deserializer=repository__pb2.PlatformRequest.FromString,
                    response_serializer=repository__pb2.HwPlatform.SerializeToString,
            ),
            'ValidatePlatform': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidatePlatform,
                    request_deserializer=repository__pb2.PlatformRequest.FromString,
                    response_serializer=repository__pb2.ValidatePlatformResponse.SerializeToString,
            ),
            'ListAppRepos': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAppRepos,
                    request_deserializer=repository__pb2.ListAppRepoRequest.FromString,
                    response_serializer=repository__pb2.AppRepos.SerializeToString,
            ),
            'ResetAppRepos': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetAppRepos,
                    request_deserializer=repository__pb2.ResetAppReposRequest.FromString,
                    response_serializer=repository__pb2.ResetAppReposResponse.SerializeToString,
            ),
            'AddAppRepo': grpc.unary_unary_rpc_method_handler(
                    servicer.AddAppRepo,
                    request_deserializer=repository__pb2.AppRepo.FromString,
                    response_serializer=repository__pb2.AddAppRepoResponse.SerializeToString,
            ),
            'GetAppRepo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAppRepo,
                    request_deserializer=repository__pb2.GetAppRepoRequest.FromString,
                    response_serializer=repository__pb2.AppRepo.SerializeToString,
            ),
            'DeleteAppRepo': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAppRepo,
                    request_deserializer=repository__pb2.AppRepo.FromString,
                    response_serializer=repository__pb2.DeleteAppRepoResponse.SerializeToString,
            ),
            'GetAppRepoState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAppRepoState,
                    request_deserializer=repository__pb2.GetAppRepoStateRequest.FromString,
                    response_serializer=repository__pb2.AppRepoStatus.SerializeToString,
            ),
            'UpdateAppRepo': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAppRepo,
                    request_deserializer=repository__pb2.AppRepo.FromString,
                    response_serializer=repository__pb2.UpdateAppRepoResponse.SerializeToString,
            ),
            'SyncLocalRepo': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncLocalRepo,
                    request_deserializer=repository__pb2.SyncLocalRepoRequest.FromString,
                    response_serializer=repository__pb2.SyncLocalRepoResponse.SerializeToString,
            ),
            'GetAppTemplateTree': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAppTemplateTree,
                    request_deserializer=repository__pb2.GetAppTemplateTreeRequest.FromString,
                    response_serializer=repository__pb2.AppTemplateTree.SerializeToString,
            ),
            'ListAieExampleRepos': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAieExampleRepos,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=repository__pb2.AppRepos.SerializeToString,
            ),
            'GetAieExampleTemplateTree': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAieExampleTemplateTree,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=repository__pb2.AppTemplateTree.SerializeToString,
            ),
            'ListHlsExampleRepos': grpc.unary_unary_rpc_method_handler(
                    servicer.ListHlsExampleRepos,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=repository__pb2.AppRepos.SerializeToString,
            ),
            'GetHlsExampleTemplateTree': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHlsExampleTemplateTree,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=repository__pb2.AppTemplateTree.SerializeToString,
            ),
            'GetEmbeddedExampleTemplateTree': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEmbeddedExampleTemplateTree,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=repository__pb2.AppTemplateTree.SerializeToString,
            ),
            'GetFilteredPlatformDomains': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFilteredPlatformDomains,
                    request_deserializer=repository__pb2.DomainFilterRequest.FromString,
                    response_serializer=repository__pb2.Domains.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'xilinx.rigel.repository.v1.RepositoryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RepositoryService(object):
    """For repo handling, platforms and applications.
    """

    @staticmethod
    def ListRepoPaths(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/ListRepoPaths',
            repository__pb2.ListRepoPathsRequest.SerializeToString,
            repository__pb2.RepoPaths.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRepoPaths(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/SetRepoPaths',
            repository__pb2.RepoPaths.SerializeToString,
            repository__pb2.SetRepoPathsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddRepoPaths(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/AddRepoPaths',
            repository__pb2.RepoPaths.SerializeToString,
            repository__pb2.SetRepoPathsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveRepoPaths(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/RemoveRepoPaths',
            repository__pb2.RepoPaths.SerializeToString,
            repository__pb2.SetRepoPathsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReScanRepos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/ReScanRepos',
            repository__pb2.RepoPaths.SerializeToString,
            repository__pb2.SetRepoPathsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPlatform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/GetPlatform',
            repository__pb2.PlatformRequest.SerializeToString,
            repository__pb2.Platform.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPlatforms(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/ListPlatforms',
            repository__pb2.ListPlatformsRequest.SerializeToString,
            repository__pb2.Platforms.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSwPlatform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/GetSwPlatform',
            repository__pb2.PlatformRequest.SerializeToString,
            repository__pb2.SwPlatform.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHwPlatform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/GetHwPlatform',
            repository__pb2.PlatformRequest.SerializeToString,
            repository__pb2.HwPlatform.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidatePlatform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/ValidatePlatform',
            repository__pb2.PlatformRequest.SerializeToString,
            repository__pb2.ValidatePlatformResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAppRepos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/ListAppRepos',
            repository__pb2.ListAppRepoRequest.SerializeToString,
            repository__pb2.AppRepos.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetAppRepos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/ResetAppRepos',
            repository__pb2.ResetAppReposRequest.SerializeToString,
            repository__pb2.ResetAppReposResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddAppRepo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/AddAppRepo',
            repository__pb2.AppRepo.SerializeToString,
            repository__pb2.AddAppRepoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAppRepo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/GetAppRepo',
            repository__pb2.GetAppRepoRequest.SerializeToString,
            repository__pb2.AppRepo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAppRepo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/DeleteAppRepo',
            repository__pb2.AppRepo.SerializeToString,
            repository__pb2.DeleteAppRepoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAppRepoState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/GetAppRepoState',
            repository__pb2.GetAppRepoStateRequest.SerializeToString,
            repository__pb2.AppRepoStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAppRepo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/UpdateAppRepo',
            repository__pb2.AppRepo.SerializeToString,
            repository__pb2.UpdateAppRepoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncLocalRepo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/SyncLocalRepo',
            repository__pb2.SyncLocalRepoRequest.SerializeToString,
            repository__pb2.SyncLocalRepoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAppTemplateTree(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/GetAppTemplateTree',
            repository__pb2.GetAppTemplateTreeRequest.SerializeToString,
            repository__pb2.AppTemplateTree.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAieExampleRepos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/ListAieExampleRepos',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            repository__pb2.AppRepos.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAieExampleTemplateTree(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/GetAieExampleTemplateTree',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            repository__pb2.AppTemplateTree.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListHlsExampleRepos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/ListHlsExampleRepos',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            repository__pb2.AppRepos.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHlsExampleTemplateTree(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/GetHlsExampleTemplateTree',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            repository__pb2.AppTemplateTree.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEmbeddedExampleTemplateTree(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/GetEmbeddedExampleTemplateTree',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            repository__pb2.AppTemplateTree.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFilteredPlatformDomains(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/xilinx.rigel.repository.v1.RepositoryService/GetFilteredPlatformDomains',
            repository__pb2.DomainFilterRequest.SerializeToString,
            repository__pb2.Domains.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
